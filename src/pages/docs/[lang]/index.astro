---
import { LANGS, type Lang, START_PAGE, DEFAULT_LANG } from "../../../config/i18n";

// Generate static paths for all supported languages
export function getStaticPaths() {
  return LANGS.map((lang) => ({ params: { lang } }));
}

// Resolve and redirect to the proper language start page
const { lang } = Astro.params as { lang?: string };
const safeLang: Lang = LANGS.includes((lang as Lang) || ("" as Lang))
  ? (lang as Lang)
  : "en";
const BASE = import.meta.env.BASE_URL || '/';
const target = `${BASE}${START_PAGE[safeLang].replace(/^\//, '')}`;
const alternates = Object.fromEntries(
  LANGS.map((l: Lang) => [l, `${BASE}${START_PAGE[l].replace(/^\//, '')}`])
) as Record<Lang, string>;
Astro.redirect(target);
---
<!doctype html>
<html lang={safeLang}>
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="refresh" content={`0; url=${target}`} />
    <link rel="canonical" href={target} />
    {Object.entries(alternates).map(([code, href]) => (
      <link rel="alternate" hreflang={code} href={href} />
    ))}
    <link rel="alternate" hreflang="x-default" href={alternates[DEFAULT_LANG]} />
    <title>Redirecting…</title>
  </head>
  <body>
    <p>Redirecting to <a href={target}>{safeLang.toUpperCase()} docs</a>…</p>
  </body>
</html>
